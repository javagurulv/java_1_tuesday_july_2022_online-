WARNING: Автоматические тесты должны быть качественные.
Иначе в них нет никакого толку! Просто протестировать
happy path сценарий на одном тест кейсе это далеко не все.
В каждом более менее сложном алгоритме есть много бизнес
логики, решений которые принимает алгоритм, бизнес правил.
Всё это должно быть покрыто тестами. В конце концов качественные
автоматические тесты показывают качество вашего кода.


class WordServiceTest {
    public static void main(String[] args) {
        WordService wordService = new WordService();
        String text = "aa bb ccc bbc bb aa aa";
        String expectedResult = "aa";
        boolean testWordCount = wordService.findMostFrequentWord(text).equals(expectedResult);
        if (testWordCount == true) {
            System.out.println("Test OK");
        } else {
            System.out.println("Test FAIL");
        }
    }
}

Про каждую тестируемую функциональность нужно думать отдельно
и составлять для неё свой набор тестов, которые проверяют
как happy path, так и поведение при граничных значениях.
Тестовые сценарии должны быть придуманы и записаны на бумаге
до написания кода тестов. Придумывание тестовых сценариев это
одна работа, их кодирование это другая. При их смешивании вы
упустите из виду возможные сценарии и забудете написать для
них тесты.